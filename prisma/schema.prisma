// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String                     @id @default(uuid())
  sub           String                     @unique
  name          String
  email         String                     @unique
  createdAt     DateTime                   @default(now()) @db.Timestamptz(6)
  updatedAt     DateTime                   @default(now()) @updatedAt @db.Timestamptz(6)
  articles      Article[]
  subscriptions UserCategorySubscription[]

  @@map("users")
}

model Article {
  id         Int      @id @default(autoincrement())
  title      String
  content    String
  userID     String
  user       User     @relation(fields: [userID], references: [id], onDelete: Cascade)
  category   Category @relation(fields: [categoryId], references: [id])
  categoryId Int
  createdAt  DateTime @default(now()) @db.Timestamptz(6)
  updatedAt  DateTime @default(now()) @updatedAt @db.Timestamptz(6)
}

model Category {
  id          Int                        @id @default(autoincrement())
  name        String                     @unique
  articles    Article[]
  subscribers UserCategorySubscription[]
}

model UserCategorySubscription {
  userId     String
  categoryId Int

  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  category   Category @relation(fields: [categoryId], references: [id], onDelete: Cascade)

  @@id([userId, categoryId])
}
